# Target variables
MODE ?= Debug
sbg_branch ?= sb-graph-dev

# The Directories, Source, Includes, Objects, Binary 
ROOT   	        := .
3RD_PARTY_DIR   := $(ROOT)/3rd-party
GTEST_DIR       := googletest-release-1.12.1
GTEST_CODE      := $(GTEST_DIR).tar.gz
BUILD_DIR       := 
BUILD_DIR    	:= $(ROOT)/obj/release
ifeq ($(MODE),Debug)
BUILD_DIR    	:= $(ROOT)/obj/debug
endif
AST_DIR         := ast
PARSER_DIR      := parser
SBG_LIB         := sbg
SBG_DEV         := sb-graph-dev

# Flags, Libraries and Includes
INCLUDES := -I. -I$(3RD_PARTY_DIR)/$(SBG_LIB)/$(SBG_DEV)/include 
CXXFLAGS := -std=c++17 -Wall -Werror -Wno-reorder -O3 
ifeq ($(MODE),Debug)
CXXFLAGS 	+= -ggdb  
endif
LIBMODELICA = lib/libmodelica.a
LIBS     := -L./lib -L$(3RD_PARTY_DIR)/$(SBG_LIB)/$(SBG_DEV)/lib -lsbgraph -lginac -lmodelica

all: $(LIBMODELICA)

include antialias/Makefile.include
include mmo/Makefile.include
include flatter/Makefile.include
include causalize/Makefile.include
include test/causalize/Makefile.include

# Sources
COMMON_SRC := \
    	$(AST_DIR)/expression.cpp \
		$(AST_DIR)/class.cpp \
		$(AST_DIR)/equation.cpp \
		$(AST_DIR)/statement.cpp \
		$(AST_DIR)/modification.cpp \
		$(AST_DIR)/element.cpp \
		$(AST_DIR)/expression.cpp \
		$(PARSER_DIR)/ident.cpp \
		$(PARSER_DIR)/expression.cpp \
		$(PARSER_DIR)/modification.cpp \
		$(PARSER_DIR)/equation.cpp \
		$(PARSER_DIR)/statement.cpp \
		$(PARSER_DIR)/class.cpp \
		$(PARSER_DIR)/parser.cpp

# Objects
COMMON_OBJ=$(addprefix $(BUILD_DIR)/, $(COMMON_SRC:.cpp=.o))

$(BUILD_DIR)/%.o : %.cpp
	$(CC) $(INCLUDES) $(CXXFLAGS) -MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<
	$(CC) $(INCLUDES) -c $< -o $@ $(CXXFLAGS)

$(COMMON_OBJ): | create-folders

lib-sbg:  
ifeq ("$(wildcard $(3RD_PARTY_DIR)/sbg/sb-graph-dev/lib)","")
	cd $(3RD_PARTY_DIR)/$(SBG_LIB); ./update.py --branch_name $(sbg_branch)
	cd $(3RD_PARTY_DIR)/$(SBG_LIB); tar xvzf $(SBG_DEV).tar.gz
	cd $(3RD_PARTY_DIR)/$(SBG_LIB)/$(SBG_DEV); autoconf 
	cd $(3RD_PARTY_DIR)/$(SBG_LIB)/$(SBG_DEV); ./configure
	cd $(3RD_PARTY_DIR)/$(SBG_LIB)/$(SBG_DEV); make
	cd $(3RD_PARTY_DIR)/$(SBG_LIB)/$(SBG_DEV); sudo make install
endif

$(LIBMODELICA): $(COMMON_OBJ) lib-sbg | create-folders
	$(AR) rcs $(LIBMODELICA) $(COMMON_OBJ)

doc: Doxyfile
	doxygen

lib-gtest: | create-folders 
ifeq ("$(wildcard $(3RD_PARTY_DIR)/gtest/usr/lib)","")
	cd $(3RD_PARTY_DIR)/gtest; tar xvzf $(GTEST_CODE)
	mkdir -p $(3RD_PARTY_DIR)/gtest/build
	cd $(3RD_PARTY_DIR)/gtest/build; cmake ../$(GTEST_DIR) -DCMAKE_INSTALL_PREFIX=../usr  
	cd $(3RD_PARTY_DIR)/gtest/build; sudo make install 
	rm -rf $(3RD_PARTY_DIR)/gtest/$(GTEST_DIR)
	rm -rf $(3RD_PARTY_DIR)/gtest/build
endif

create-folders::
	@mkdir -p $(ROOT)/lib
	@mkdir -p $(BUILD_DIR)
	@mkdir -p $(BUILD_DIR)/$(AST_DIR)
	@mkdir -p $(BUILD_DIR)/$(PARSER_DIR)

test: lib-gtest $(FLATTER_TEST) $(CAUSALIZE_SBG_TEST) $(SBG_GRAPH_TEST)

clean:
	$(RM) -rf $(BUILD_DIR) $(LIBMODELICA) doc

help:
	@echo "make MODE=<Debug|Release> sbg_branch=<BRANCH_NAME>"
	@echo "Default values:"
	@echo ""
	@echo "MODE=Debug"
	@echo "sbg_branch=sb-graph-dev"
