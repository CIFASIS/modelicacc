model Generator
  parameter Integer N = 10
    "Number of finite volumes for the superheater model";
  constant Real pi = 3.1416;
  parameter Real P_nom = 500e6 "Nominal power of the generator";
  parameter Real f_ref = 50 "Reference network frequency";
  parameter Real T_a = 5 "Characteristic time of the generator";
  parameter Real alpha = 0.3
    "Fraction of turbine power provided by the high-pressure turbine";
  parameter Real T_source = 1.5
    "Normalized temperature of heat source for the superheater";
  parameter Real NTU = 2 "Number of thermal units in the superheater";
  parameter Real tau_b = 200
    "Characteristic time of energy storage in the boiler";
  parameter Real tau_t = 8
    "Characteristic response time of the low pressure turbine";
  parameter Real tau_q = 3
    "Characteristic time of thermal generation process";
  parameter Real tau_sh = 100
    "Characteristic time of the superheater thermal response";
  parameter Real tau_y = 0.3 "Characteristic time of turbine governor";
  parameter Real droop = 0.1 "Primary frequency control droop";
  parameter Real Kp_p = 10 "Proportional gain of pressure controller";
  parameter Real Ti_p = 70 "Integral time of pressure controller";
  parameter Real Kp_t = 2 "Proportional gain of power controller";
  parameter Real Ti_t = 0.3 "Integral time of power controller";
  final parameter Real omega_ref = 2*pi*f_ref;
  final parameter Real J = P_nom*T_a/(omega_ref^2);
   Real P_a = P_nom
    "Active electrical power produced by the synchronous generator - replace the default binding";
  Real P_t_0 = P_nom
    "Active power set point - replace the default binding";
  Real P_sfc = 0
    "Additional power request for secondary frequency control - replace the default binding";
  Real P_t(nominal = 1e9) "Mechanical power generated by the turbine [W]";
  Real theta
    "Rotor angle relative to reference rotating at nominal speed";
  Real omega "Turbine angular speed";
  Real f "Generator frequency";
  Real delta_f "Normalized frequency error";
  Real p "Boiler pressure in p.u.";
  Real p_0 = 1 "Boiler pressure set point in p.u.";
  Real w_s "Steam flow rate in p.u.";
  Real q_ev "Thermal power to the boiler in p.u.";
  Real q_ev_0 "Thermal power set point in p.u.";
  Real y_t "Turbine admittance in p.u";
  Real y_t_0 "Turbine admittance set point in p.u.";
  Real p_t "Turbine power in p.u.";
  Real p_t_0 "Turbine power set point in p.u.";
  Real p_t_0_fc
    "Turbine power set point in p.u. with frequency control corrections";
  Real p_t_lp "Low-pressure turbine power in p.u.";

  Real T_s[N]
    "Normalized temperature states for the superheater model";
  Real T_s_b[N+1]
    "Normalized temperature at the boundaries of the superheater volumes";

  Real err_p_t "Power controller error in p.u.";
  Real err_p_t_int "Integral of power controller error";

  Real err_p "Pressure controller error in p.u.";
  Real err_p_int "Pressure controller integral error";

equation
  // Rotor phase angle equation (relative to reference rotating at reference speed)
  der(theta) = omega - omega_ref;

  // Energy balance on the turbine-generator axis
  J/2*der(omega) = P_t - P_a;

  // Non-dimensional boiler model
  tau_b*der(p) = q_ev - w_s;

  // Non-dimensional turbine model
  w_s = y_t*p "steam flow";
  tau_t*der(p_t_lp) + p_t_lp = (1-alpha)*w_s "LP turbine power";
  p_t = alpha *w_s + p_t_lp "Total turbine power";

  // Non-dimensional steam temperature model
  T_s_b[1] = p "Boundary condion at inlet";
  for i in 2:N+1 loop
	  T_s_b[i] = T_s[i-1] "Upwind discretization scheme";
  end for;

  for i in 1:N loop
    tau_sh/N * der(T_s[i]) = w_s*(T_s_b[i] - T_s_b[i+1]) + NTU/N*(T_source - T_s_b[i+1]);
  end for;

  // Actuation
  tau_y*der(y_t) = y_t_0 - y_t;
  tau_q*der(q_ev) = q_ev_0 - q_ev;

  // Normalization equations
  P_t = p_t*P_nom;
  P_t_0 = p_t_0*P_nom;

  // Boiler follows control strategy with primary and secondary frequency control
  f = omega/(2*pi);
  delta_f = (f - f_ref)/f_ref;
  p_t_0_fc = p_t_0 - 1/droop*delta_f + P_sfc/P_nom;

  err_p_t = p_t_0_fc - p_t;
  der(err_p_t_int) = err_p_t;

  err_p = p_0 - p;
  der(err_p_int) = err_p;

  q_ev_0 = p_t_0_fc + Kp_p*(err_p + 1/Ti_p * err_p_int);
  y_t_0 = p_t_0_fc + Kp_t*(err_p_t + 1/Ti_t *err_p_t_int);

initial equation
  theta = 0;
  omega = omega_ref;
  p = 1;
  p_t_lp = (1-alpha);
  y_t = 1;
  q_ev = 1;
  err_p_t_int = 0;
  err_p_int = 0;
  T_s[1] = (p + NTU/N*T_source)/(1 + NTU/N);
  for i in 2:N loop
      T_s[i] = (T_s[i-1] + NTU/N*T_source)/(1 + NTU/N);
  end for;

  annotation (Documentation(info="<html>
<p>The Generator model is a conceptual model of a thermal power plant with a synchronous electrical generator. The goal is not to reproduce the dynamics of any real power plant accurately, but rather to replicate the mathematical structure and the type of dynamic behaviour that is to be found in real-life power plant models.</p>
<p>In particular, the goal is to represent the slow thermal dynamics and the fast electro-mechanical dynamics at the same time. This is a particularly interesting benchmark for multi-rate integration algorithms, that can exploit these dynamic feature by only refining the integration grid for the electro-mechanical states.</p>
<p>The thermal part comprises a simplified boiler - turbine model and a thermal model of the superheated steam temperature, assuming uniform thermal source temperature for simplicity. The model is written using normalized variables for simplicity.</p>
<p>The generator model is described by the classical swing equation, assuming ideal voltage control and neglecting reactive power flows. The actual power flows between generators and loads are computed by the <a href=\"modelica://ScalableTestSuite.Power.ConceptualPowerSystem.Models.PowerSystem\">PowerSystem</a></p>
<p>The model is completed by classical boiler-follows control strategy with primary and secondary frequency control. The primary frequency control input is computed locally and is proportional to the frequency deviation, while the secondary control input is determined by the the <a href=\"modelica://ScalableTestSuite.Power.ConceptualPowerSystem.Models.PowerSystem\">PowerSystem</a> model and passed via a modifier to the individual generator models. For simplicity, the superheated steam temperature is not controlled and fluctuates depending on the steam flow.</p>
<p>The initial equations initialize the generator at steady-state, assuming that a load with the nominal power of the plant is consuming the entire production locally.</p>
</html>"));
end Generator;

